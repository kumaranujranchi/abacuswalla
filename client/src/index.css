@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 0 0% 100%;

  --foreground: 220 15% 20%;

  --border: 220 15% 88%;

  --card: 220 20% 97%;

  --card-foreground: 220 15% 20%;

  --card-border: 220 15% 92%;

  --sidebar: 220 20% 94%;

  --sidebar-foreground: 220 15% 20%;

  --sidebar-border: 220 15% 86%;

  --sidebar-primary: 220 85% 55%;

  --sidebar-primary-foreground: 220 15% 98%;

  --sidebar-accent: 220 20% 90%;

  --sidebar-accent-foreground: 220 15% 25%;

  --sidebar-ring: 220 85% 55%;

  --popover: 220 20% 93%;

  --popover-foreground: 220 15% 20%;

  --popover-border: 220 15% 88%;

  --primary: 220 85% 55%;

  --primary-foreground: 220 15% 98%;

  --secondary: 45 95% 55%;

  --secondary-foreground: 0 0% 0%;

  --muted: 220 18% 90%;

  --muted-foreground: 220 10% 45%;

  --accent: 160 75% 45%;

  --accent-foreground: 0 0% 100%;

  --yellow: 45 95% 55%;

  --yellow-foreground: 0 0% 0%;

  --destructive: 0 84% 48%;

  --destructive-foreground: 0 15% 98%;

  --input: 220 15% 78%;
  --ring: 220 85% 55%;
  --chart-1: 220 85% 48%;
  --chart-2: 45 95% 55%;
  --chart-3: 160 75% 40%;
  --chart-4: 220 75% 65%;
  --chart-5: 45 85% 45%;

  --font-sans: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
  --font-serif: 'Georgia', serif;
  --font-mono: 'Menlo', monospace;
  --font-heading: 'Fredoka', 'Inter', sans-serif;
  --font-accent: 'Poppins', 'Inter', sans-serif;
  
  --radius: .5rem;
  
  /* Animation variables */
  --ease-smooth: cubic-bezier(0.4, 0, 0.2, 1);
  --ease-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55);
  --ease-sharp: cubic-bezier(0.4, 0, 0.6, 1);
  --ease-gentle: cubic-bezier(0.25, 0.1, 0.25, 1);
  --duration-fast: 200ms;
  --duration-normal: 300ms;
  --duration-slow: 420ms;
  
  --shadow-2xs: 0px 1px 2px 0px hsl(220 15% 20% / 0.05);
  --shadow-xs: 0px 1px 3px 0px hsl(220 15% 20% / 0.10);
  --shadow-sm: 0px 2px 4px -1px hsl(220 15% 20% / 0.06), 0px 1px 2px -1px hsl(220 15% 20% / 0.10);
  --shadow: 0px 4px 6px -1px hsl(220 15% 20% / 0.07), 0px 2px 4px -2px hsl(220 15% 20% / 0.05);
  --shadow-md: 0px 6px 12px -2px hsl(220 15% 20% / 0.08), 0px 3px 6px -3px hsl(220 15% 20% / 0.10);
  --shadow-lg: 0px 10px 20px -4px hsl(220 15% 20% / 0.10), 0px 6px 12px -6px hsl(220 15% 20% / 0.08);
  --shadow-xl: 0px 20px 30px -8px hsl(220 15% 20% / 0.12), 0px 12px 24px -12px hsl(220 15% 20% / 0.10);
  --shadow-2xl: 0px 30px 50px -12px hsl(220 15% 20% / 0.18);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 220 15% 12%;

  --foreground: 220 15% 95%;

  --border: 220 15% 24%;

  --card: 220 15% 16%;

  --card-foreground: 220 15% 95%;

  --card-border: 220 15% 20%;

  --sidebar: 220 15% 18%;

  --sidebar-foreground: 220 15% 95%;

  --sidebar-border: 220 15% 22%;

  --sidebar-primary: 220 80% 65%;

  --sidebar-primary-foreground: 220 15% 98%;

  --sidebar-accent: 220 18% 22%;

  --sidebar-accent-foreground: 220 15% 92%;

  --sidebar-ring: 220 80% 65%;

  --popover: 220 15% 20%;

  --popover-foreground: 220 15% 95%;

  --popover-border: 220 15% 26%;

  --primary: 220 80% 65%;

  --primary-foreground: 220 15% 98%;

  --secondary: 45 90% 60%;

  --secondary-foreground: 0 0% 0%;

  --muted: 220 18% 22%;

  --muted-foreground: 220 10% 65%;

  --accent: 160 70% 55%;

  --accent-foreground: 0 0% 100%;

  --yellow: 45 90% 60%;

  --yellow-foreground: 0 0% 0%;

  --destructive: 0 80% 58%;

  --destructive-foreground: 0 15% 98%;

  --input: 220 15% 32%;
  --ring: 220 80% 65%;
  --chart-1: 220 80% 72%;
  --chart-2: 45 90% 60%;
  --chart-3: 160 70% 55%;
  --chart-4: 220 70% 80%;
  --chart-5: 45 80% 50%;

  --shadow-2xs: 0px 1px 2px 0px hsl(220 15% 5% / 0.20);
  --shadow-xs: 0px 1px 3px 0px hsl(220 15% 5% / 0.30);
  --shadow-sm: 0px 2px 4px -1px hsl(220 15% 5% / 0.24), 0px 1px 2px -1px hsl(220 15% 5% / 0.30);
  --shadow: 0px 4px 6px -1px hsl(220 15% 5% / 0.28), 0px 2px 4px -2px hsl(220 15% 5% / 0.20);
  --shadow-md: 0px 6px 12px -2px hsl(220 15% 5% / 0.32), 0px 3px 6px -3px hsl(220 15% 5% / 0.30);
  --shadow-lg: 0px 10px 20px -4px hsl(220 15% 5% / 0.40), 0px 6px 12px -6px hsl(220 15% 5% / 0.32);
  --shadow-xl: 0px 20px 30px -8px hsl(220 15% 5% / 0.48), 0px 12px 24px -12px hsl(220 15% 5% / 0.40);
  --shadow-2xl: 0px 30px 50px -12px hsl(220 15% 5% / 0.60);

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */
  
  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* Yellow accent touches - subtle highlights */
  .yellow-glow {
    box-shadow: 0 0 20px rgba(252, 211, 77, 0.15);
  }

  .yellow-border-glow {
    border-color: hsl(var(--yellow) / 0.3);
    box-shadow: 0 0 10px rgba(252, 211, 77, 0.1);
  }

  /* Smooth animations */
  .animate-fade-in {
    animation: fadeIn 0.6s ease-in-out;
  }

  .animate-slide-up {
    animation: slideUp 0.5s ease-out;
  }

  .animate-slide-in-right {
    animation: slideInRight 0.5s ease-out;
  }

  .animate-scale-in {
    animation: scaleIn 0.4s ease-out;
  }
  
  /* Staggered fade-up animation for scroll-triggered elements */
  .animate-fade-up {
    opacity: 0;
    transform: translateY(18px);
    transition: opacity var(--duration-slow) var(--ease-smooth), 
                transform var(--duration-slow) var(--ease-smooth);
  }
  
  .animate-fade-up.in-view {
    opacity: 1;
    transform: translateY(0);
  }
  
  /* Card hover parallax */
  .card-parallax {
    transition: transform var(--duration-normal) var(--ease-smooth);
  }
  
  /* 3D tilt effect for icons */
  .icon-3d-tilt {
    transform-style: preserve-3d;
    transition: transform var(--duration-normal) var(--ease-smooth);
  }
  
  .icon-3d-tilt:hover {
    transform: perspective(1000px) rotateX(6deg) rotateY(6deg);
  }
  
  /* Glow ring on icon hover */
  .icon-glow-ring {
    position: relative;
  }
  
  .icon-glow-ring::after {
    content: '';
    position: absolute;
    inset: -8px;
    border-radius: inherit;
    background: radial-gradient(circle, rgba(59, 130, 246, 0.3) 0%, transparent 70%);
    opacity: 0;
    transition: opacity var(--duration-normal) var(--ease-smooth);
    pointer-events: none;
    z-index: -1;
  }
  
  .icon-glow-ring:hover::after {
    opacity: 1;
  }
  
  /* Floating/bobbing animation */
  .animate-float {
    animation: float 3s ease-in-out infinite;
    animation-play-state: paused;
  }
  
  .animate-float:hover {
    animation-play-state: running;
  }
  
  /* Program card scale on load */
  .program-card-enter {
    animation: programCardEnter 0.6s var(--ease-smooth) forwards;
  }
  
  /* Ripple effect container */
  .ripple-container {
    position: relative;
    overflow: hidden;
  }
  
  .ripple {
    position: absolute;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.6);
    transform: scale(0);
    animation: ripple 0.6s ease-out;
    pointer-events: none;
  }
  
  /* Gradient shift animation for CTA strip */
  .animate-gradient-shift {
    background-size: 200% 200%;
    animation: gradientShift 6s ease infinite;
  }
  
  /* Parallax background */
  .parallax-bg {
    transform: translateZ(0);
    will-change: transform;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideInRight {
    from {
      opacity: 0;
      transform: translateX(-30px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes scaleIn {
    from {
      opacity: 0;
      transform: scale(0.9);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
  
  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-10px);
    }
  }
  
  @keyframes programCardEnter {
    from {
      opacity: 0;
      transform: scale(0.98);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
  
  @keyframes ripple {
    to {
      transform: scale(4);
      opacity: 0;
    }
  }
  
  @keyframes gradientShift {
    0%, 100% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }
  
  /* Staggered entrance for hero text lines */
  .hero-line-1 {
    animation: heroLineEnter 0.8s var(--ease-smooth) 0.1s both;
  }
  
  .hero-line-2 {
    animation: heroLineEnter 0.8s var(--ease-smooth) 0.22s both;
  }
  
  .hero-line-3 {
    animation: heroLineEnter 0.8s var(--ease-smooth) 0.34s both;
  }
  
  .hero-subline {
    animation: heroLineEnter 0.8s var(--ease-smooth) 0.54s both;
  }
  
  @keyframes heroLineEnter {
    from {
      opacity: 0;
      transform: translateY(18px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* CTA pulse on load */
  .cta-pulse-once {
    animation: ctaPulse 1.2s var(--ease-smooth) 0.8s 1;
  }
  
  @keyframes ctaPulse {
    0%, 100% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.02);
    }
  }

  /* CTA Button Hover Effect */
  .cta-hover {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .cta-hover:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.1);
  }

  .cta-hover:active {
    transform: translateY(0);
    box-shadow: 0 4px 10px -2px rgba(0, 0, 0, 0.1);
  }

  /* Modern CTA Button with Blue-to-Yellow Gradient Transition */
  .cta-gradient-button {
    /* Base styles */
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 1rem 2rem;
    
    /* Typography */
    font-weight: 600;
    font-size: 1rem;
    color: white;
    text-decoration: none;
    
    /* Shape */
    border-radius: 9999px; /* Fully rounded corners */
    border: none;
    
    /* Blue gradient background - normal state */
    background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
    background-size: 200% 200%;
    background-position: 0% 50%;
    
    /* Shadow */
    box-shadow: 0 4px 6px -1px rgba(59, 130, 246, 0.3), 
                0 2px 4px -1px rgba(59, 130, 246, 0.2);
    
    /* Smooth transitions */
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    
    /* Cursor */
    cursor: pointer;
    overflow: hidden;
  }

  /* Arrow icon container */
  .cta-gradient-button::after {
    content: '→';
    position: absolute;
    right: 2rem;
    opacity: 0;
    transform: translateX(1rem); /* Start position off to the right */
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    font-size: 1.25rem;
    line-height: 1;
  }

  /* Hover state - yellow gradient + lift + arrow slide in */
  .cta-gradient-button:hover {
    /* Change to yellow gradient */
    background: linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%);
    background-size: 200% 200%;
    background-position: 100% 50%;
    
    /* Lift the button */
    transform: translateY(-4px);
    
    /* Enhanced shadow */
    box-shadow: 0 20px 25px -5px rgba(251, 191, 36, 0.3), 
                0 10px 10px -5px rgba(251, 191, 36, 0.2);
  }

  /* Arrow slides into position on hover */
  .cta-gradient-button:hover::after {
    opacity: 1;
    transform: translateX(0); /* Slide to final position */
  }

  /* Add padding on hover to make room for arrow */
  .cta-gradient-button:hover {
    padding-right: 3rem;
  }

  /* Focus state for accessibility */
  .cta-gradient-button:focus-visible {
    outline: 3px solid #3b82f6;
    outline-offset: 3px;
  }

  /* Active state - pressed down */
  .cta-gradient-button:active {
    transform: translateY(-1px);
    box-shadow: 0 10px 15px -3px rgba(251, 191, 36, 0.2);
  }

  /* Respect reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .cta-gradient-button,
    .cta-gradient-button::after {
      transition: none;
      animation: none;
    }
    
    .cta-gradient-button:hover {
      transform: none;
    }
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    .cta-gradient-button {
      padding: 0.875rem 1.75rem;
      font-size: 0.9375rem;
    }
  }
  
  /* Accessibility: Respect prefers-reduced-motion */
  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
    
    /* Disable parallax */
    .parallax-bg {
      transform: none !important;
    }
    
    /* Disable floating/bobbing */
    .animate-float {
      animation: none !important;
    }
    
    /* Keep essential entrance animations but make instant */
    .animate-fade-up,
    .hero-line-1,
    .hero-line-2,
    .hero-line-3,
    .hero-subline {
      opacity: 1 !important;
      transform: none !important;
    }
    
    /* Disable gradient shift */
    .animate-gradient-shift {
      animation: none !important;
    }
    
    /* Keep focus states visible but remove motion */
    .cta-gradient-button:hover,
    .cta-hover:hover {
      transform: none !important;
    }
  }

  /* Smooth transitions for all interactive elements */
  * {
    transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease, box-shadow 0.2s ease;
  }
}